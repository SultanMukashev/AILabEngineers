import psycopg2
import pandas as pd

# üîó PostgreSQL-–≥–µ “õ–æ—Å—ã–ª—É
DB_NAME = "mydatabase"
DB_USER = "admin"
DB_PASSWORD = "secret"
DB_HOST = "localhost"
DB_PORT = "5434"

def load_csv_to_table(csv_path, table_name):
    """
    CSV —Ñ–∞–π–ª–¥–∞“ì—ã –¥–µ—Ä–µ–∫—Ç–µ—Ä–¥—ñ PostgreSQL –∫–µ—Å—Ç–µ—Å—ñ–Ω–µ –∂“Ø–∫—Ç–µ—É (–¥—É–±–ª–∏–∫–∞—Ç—Ç–∞—Ä–¥—ã –µ–ª–µ–º–µ–π–¥—ñ).
    """
    try:
        df = pd.read_csv(csv_path, encoding="utf-8")
        
        # ‚ùå –ï–≥–µ—Ä id “õ–∞–π—Ç–∞–ª–∞–Ω–∞—Ç—ã–Ω –±–æ–ª—Å–∞, –æ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç—Ç—ã —Ç“Ø—Ä–¥–µ –∂–æ—é
        if 'id' in df.columns:
            df.drop_duplicates(subset=['id'], inplace=True)

        columns = list(df.columns)
        columns_str = ', '.join(columns)
        placeholders = ', '.join(['%s'] * len(columns))

        query = f"""
            INSERT INTO {table_name} ({columns_str}) 
            VALUES ({placeholders}) 
            ON CONFLICT (id) DO NOTHING;
        """

        conn = psycopg2.connect(
            dbname=DB_NAME,
            user=DB_USER,
            password=DB_PASSWORD,
            host=DB_HOST,
            port=DB_PORT
        )
        cur = conn.cursor()

        for _, row in df.iterrows():
            values = tuple(row)
            cur.execute(query, values)

        conn.commit()
        print(f"‚úÖ {csv_path} –¥–µ—Ä–µ–∫—Ç–µ—Ä—ñ '{table_name}' –∫–µ—Å—Ç–µ—Å—ñ–Ω–µ –∂“Ø–∫—Ç–µ–ª–¥—ñ.")

        cur.close()
        conn.close()
    except Exception as e:
        print(f"‚ùå “ö–∞—Ç–µ: {e}")

# üîπ CSV —Ñ–∞–π–ª–¥–∞—Ä–¥—ã –∂“Ø–∫—Ç–µ—É
if __name__ == "__main__":
    load_csv_to_table("data/users.csv", "users")
    load_csv_to_table("data/orders.csv", "orders")
